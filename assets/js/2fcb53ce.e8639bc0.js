"use strict";(self.webpackChunkopenyurt_io=self.webpackChunkopenyurt_io||[]).push([[2231],{3905:(e,o,t)=>{t.d(o,{Zo:()=>u,kt:()=>m});var n=t(67294);function r(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function i(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);o&&(n=n.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?i(Object(t),!0).forEach((function(o){r(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function l(e,o){if(null==e)return{};var t,n,r=function(e,o){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],o.indexOf(t)>=0||(r[t]=e[t]);return r}(e,o);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),d=function(e){var o=n.useContext(s),t=o;return e&&(t="function"==typeof e?e(o):a(a({},o),e)),t},u=function(e){var o=d(e.components);return n.createElement(s.Provider,{value:o},e.children)},p={inlineCode:"code",wrapper:function(e){var o=e.children;return n.createElement(n.Fragment,{},o)}},c=n.forwardRef((function(e,o){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=d(t),m=r,f=c["".concat(s,".").concat(m)]||c[m]||p[m]||i;return t?n.createElement(f,a(a({ref:o},u),{},{components:t})):n.createElement(f,a({ref:o},u))}));function m(e,o){var t=arguments,r=o&&o.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=c;var l={};for(var s in o)hasOwnProperty.call(o,s)&&(l[s]=o[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var d=2;d<i;d++)a[d]=t[d];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},70417:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=t(87462),r=(t(67294),t(3905));const i={title:"nodeport-isolation"},a=void 0,l={unversionedId:"user-manuals/network/nodeport-isolation",id:"user-manuals/network/nodeport-isolation",title:"nodeport-isolation",description:"Background introduction",source:"@site/docs/user-manuals/network/nodeport-isolation.md",sourceDirName:"user-manuals/network",slug:"/user-manuals/network/nodeport-isolation",permalink:"/docs/next/user-manuals/network/nodeport-isolation",draft:!1,editUrl:"https://github.com/openyurtio/openyurt.io/edit/master/docs/user-manuals/network/nodeport-isolation.md",tags:[],version:"current",lastUpdatedBy:"rambohe-ch",lastUpdatedAt:1686311568,formattedLastUpdatedAt:"Jun 9, 2023",frontMatter:{title:"nodeport-isolation"},sidebar:"docs",previous:{title:"Service Topology",permalink:"/docs/next/user-manuals/network/service-topology"},next:{title:"programmable resource access control",permalink:"/docs/next/user-manuals/resource-access-control/"}},s={},d=[{value:"Background introduction",id:"background-introduction",level:2},{value:"Architecture design",id:"architecture-design",level:2},{value:"How to use",id:"how-to-use",level:2}],u={toc:d};function p(e){let{components:o,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,t,{components:o,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"background-introduction"},"Background introduction"),(0,r.kt)("p",null,"This feature originated from a community requirement, which can be found in the detailed discussion on issue ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/openyurtio/openyurt/issues/1183"},"#1183"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"In edge network scenarios, service isolation is required. For example, when using a NodePort type service, it should only serve specific node pools.")),(0,r.kt)("h2",{id:"architecture-design"},"Architecture design"),(0,r.kt)("p",null,"A new filter named ",(0,r.kt)("inlineCode",{parentName:"p"},"nodeportisolation")," has been introduced to handle this feature, and a new annotation ",(0,r.kt)("inlineCode",{parentName:"p"},"nodeport.openyurt.io/listen")," has been added for NodePort services to trigger the nodeportisolation filter in YurtHub.\nThe nodeportisolation filter reassembles responses for kube-proxy list/watch service requests according to the ",(0,r.kt)("inlineCode",{parentName:"p"},"nodeport.openyurt.io/listen")," annotation settings in the service."),(0,r.kt)("p",null,"For more information on the detailed design of the data filtering framework, please refer to ",(0,r.kt)("a",{parentName:"p",href:"/docs/next/user-manuals/resource-access-control/"},"resource-access-control"),"."),(0,r.kt)("h2",{id:"how-to-use"},"How to use"),(0,r.kt)("p",null,"The introduction of the ",(0,r.kt)("inlineCode",{parentName:"p"},"nodeport.openyurt.io/listen")," annotation for NodePort/LoadBalancer services is as follows:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Key: nodeport.openyurt.io/listen")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Value: A list of node pool names separated by ','"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"foo"),": Enable the specified NodePort service to listen on nodes in the NodePool named foo."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-foo"),": Disable the specified NodePort service from listening on nodes in the NodePool named foo."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"*"),": Enable the specified NodePort service to listen on nodes in all NodePools."),(0,r.kt)("li",{parentName:"ul"},"If a NodePool name is duplicated in the configuration, the first configuration will be used."),(0,r.kt)("li",{parentName:"ul"},"If a NodePool name is not configured, NodePort listening will be disabled on nodes in these unconfigured NodePools."),(0,r.kt)("li",{parentName:"ul"},"Orphan nodes (not located in a NodePool) will be treated the same as in native Kubernetes, so NodePort will be listened on orphan nodes."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Annotation setting examples:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  - `nodeport.openyurt.io/listen=foo, bar`: Enable NodePort service listening on nodes in `foo` and `bar` NodePools.\n  - `nodeport.openyurt.io/listen=foo, *`: Enable NodePort service listening on nodes in all NodePools.\n  - `nodeport.openyurt.io/listen=-foo, -bar`: Disable NodePort service listening on nodes in all NodePools.\n  - `nodeport.openyurt.io/listen=-foo, *`: Disable NodePort service listening only on nodes in `foo` NodePool.\n  - `nodeport.openyurt.io/listen=foo,-foo`: Enable NodePort service listening on nodes in `foo` NodePool.\n  - `nodeport.openyurt.io/listen=-foo`: Disable NodePort service listening on nodes in all NodePools (including `foo` NodePool).\n")))}p.isMDXComponent=!0}}]);